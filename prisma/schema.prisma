// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int      @id @default(autoincrement())
  name               String
  email              String   @unique
  email_verification Boolean  @default(false)
  password           String
  createdAt          DateTime @default(now())
  carts              Cart[]
}

model Season {
  id    Int      @id @default(autoincrement())
  name  String
  start DateTime
  end   DateTime
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  sizes       Size[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  imageUrl    String?
  carts       CartProduct[]
}

model Size {
  id        Int           @id @default(autoincrement())
  name      String
  quantity  Int
  product   Product       @relation(fields: [productId], references: [id])
  productId Int
  carts     CartProduct[]
}

model Cart {
  id        Int           @id @default(autoincrement())
  User      User?         @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  products  CartProduct[]
}

model CartProduct {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  sizeId    Int
  quantity  Int
  isLoaded  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  size      Size     @relation(fields: [sizeId], references: [id])
}
