// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String
  email              String    @unique
  email_verification Boolean   @default(false)
  password           String
  Cart               Cart?     @relation
  cartId             Int?      @unique
  createdAt          DateTime  @default(now())
  address            Address[]
  cards              Card[]
  role               Role      @relation(fields: [roleId], references: [id])
  roleId             Int
}

model Season {
  id    Int      @id @default(autoincrement())
  name  String
  start DateTime
  end   DateTime
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  sizes       Size[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  imageUrl    String?
  carts       CartProduct[]
}

model Size {
  id        Int           @id @default(autoincrement())
  name      String
  quantity  Int
  product   Product       @relation(fields: [productId], references: [id])
  productId Int
  carts     CartProduct[]
}

model Cart {
  id        Int           @id @default(autoincrement())
  User      User          @relation(fields: [userId], references: [id])
  userId    Int           @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  products  CartProduct[]
}

model CartProduct {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  sizeId    Int
  quantity  Int
  isLoaded  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  size      Size     @relation(fields: [sizeId], references: [id])
}

model Newsletter {
  id    Int    @id @default(autoincrement())
  email String @unique
}

model Address {
  id             Int    @id @default(autoincrement())
  country        String @db.VarChar(25)
  names          String @db.VarChar(50)
  surnames       String @db.VarChar(50)
  address        String
  neighborhood   String @db.VarChar(30)
  specifications String
  state          String @db.VarChar(20)
  city           String @db.VarChar(30)
  phone          String @db.VarChar(15)
  User           User?  @relation(fields: [userId], references: [id])
  userId         Int?
}

model Card {
  id                    Int    @id @default(autoincrement())
  card_number           String
  names                 String @db.VarChar(50)
  surnames              String @db.VarChar(50)
  due_date              String @db.VarChar(5)
  security_code         Int
  number_identification Int
  User                  User?  @relation(fields: [userId], references: [id])
  userId                Int?
}

model Role {
  id   Int    @id @default(autoincrement())
  role String @db.VarChar(10)
  User User[]
}
